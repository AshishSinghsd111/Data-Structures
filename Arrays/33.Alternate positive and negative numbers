//this is a gfg potd for 9th september 2024.
difficulty - easy
Given an unsorted array arr containing both positive and negative numbers. Your task is to create an array of alternate positive and negative numbers without changing the relative order of positive and negative numbers.
Note: Array should start with a positive number and 0 (zero) should be considered a positive element.

Examples:

Input: arr[] = [9, 4, -2, -1, 5, 0, -5, -3, 2]
Output: 9 -2 4 -1 5 -5 0 -3 2
Explanation: Positive elements : [9,4,5,0,2]
Negative elements : [-2,-1,-5,-3]
As we need to maintain the relative order of postive elements and negative elements we will pick each element from the positive and negative and will store them. If any of the positive and negative numbersare completed. we will continue with the remaining signed elements.
The output is 9,-2,4,-1,5,-5,0,-3,2.
Input: arr[] = [-5, -2, 5, 2, 4, 7, 1, 8, 0, -8]
Output: 5 -5 2 -2 4 -8 7 1 8 0
Explanation : Positive elements : [5,2,4,7,1,8,0]
Negative elements : [-5,-2,-8]
The output is 5, -5, 2, -2, 4, -8, 7, 1, 8, 0.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(n)

Constraints:
1 ≤ arr.size() ≤ 107
-106 ≤ arr[i] ≤ 10

--->> java solution

User
Jyothi Swaroop N
2 hours ago

 

class Solution {
    void rearrange(ArrayList<Integer> arr) {
        // Create two lists to hold positive and negative numbers
        ArrayList<Integer> pos = new ArrayList<>();
        ArrayList<Integer> neg = new ArrayList<>();

        // Split the numbers into the pos and neg lists
        for (int num : arr) {
            if (num >= 0) {
                pos.add(num);
            } else {
                neg.add(num);
            }
        }

        // Create a new list to hold the rearranged elements
        ArrayList<Integer> ans = new ArrayList<>();
        int i = 0, j = 0;
        
        // Alternate between positive and negative numbers
        while (i < pos.size() && j < neg.size()) {
            ans.add(pos.get(i++));
            ans.add(neg.get(j++));
        }

        // Add remaining positive numbers, if any
        while (i < pos.size()) {
            ans.add(pos.get(i++));
        }

        // Add remaining negative numbers, if any
        while (j < neg.size()) {
            ans.add(neg.get(j++));
        }

        // Copy the rearranged elements back into the original array
        for (int k = 0; k < arr.size(); k++) {
            arr.set(k, ans.get(k));
        }
    }
}
