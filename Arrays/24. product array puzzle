//this is a gfg potd for 17th august 2024/
//difficulty - easy
Given an array nums[], construct a Product Array nums[] such that nums[i] is equal to the product of all the elements of nums except nums[i].

Examples:

Input: nums[] = [10, 3, 5, 6, 2]
Output: [180, 600, 360, 300, 900]
Explanation: For i=0, P[i] = 3*5*6*2 = 180.
For i=1, P[i] = 10*5*6*2 = 600.
For i=2, P[i] = 10*3*6*2 = 360.
For i=3, P[i] = 10*3*5*2 = 300.
For i=4, P[i] = 10*3*5*6 = 900.
Input: nums[] = [12,0]
Output: [0, 12]
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(n)

Constraints:
1 <= nums.size() <= 1000
0 <= nums[i] <= 200
nums[i] may contain duplicates.

->> java solution

class Solution {
    public static long[] productExceptSelf(int nums[]) {
        long product=1;
        
        long []ans=new long[nums.length];
        int zero=0;
        
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0){
                zero++;
                continue;
            }
            product=product*nums[i];
        }
        
        if(zero>=2)return ans;
        
        if(zero==1){
        for(int i=0;i<ans.length;i++){
            if(nums[i]==0)ans[i]=product;
            else
            ans[i]=0;
        }
        }
        else{
        for(int i=0;i<ans.length;i++){
           ans[i]=product/nums[i];
        } 
        }
        
        return ans;
        
    }
}

