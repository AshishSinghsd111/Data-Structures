//this is a gfg potd for 27th july 2024
//
Given a string, find the minimum number of characters to be inserted to convert it to a palindrome.

Examples :

Input: str = "abcd"
Output: 3
Explanation: Inserted character marked with bold characters in dcbabcd, here we need minimum three characters to make it palindrome.
Input: str = "aa"
Output: 0
Explanation: "aa" is already a palindrome.
Expected Time Complexity: O(n2)
Expected Auxiliary Space: O(n2)

Constraints:
1 ≤ |str| ≤ 500
str contains only lowercase alphabets.

->> java solution

class Solution{
    static int dp[][];
    static int countMin(String s)
    {
        int n=s.length();
     dp=new int[n+1][n+1];
      for(int row[]:dp){
        Arrays.fill(row,-1);
      }
      if(n==1){
        return 0;
      }
      int i=0;
      int j=n-1;
      return n-lps(s,i,j);
    }
   static int lps(String s,int i,int j){
        if(i>j){
            return 0;
        }
        if(i==j) return 1;
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        if(s.charAt(i)==s.charAt(j)){
            return dp[i][j]=2+lps(s,i+1,j-1);
        }else{
            return dp[i][j]=Math.max(lps(s,i+1,j),lps(s,i,j-1));
        }
    }
}
